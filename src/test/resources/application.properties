# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name = vehicle-profile
spring.application.version = 0.9.1
spring.application.description = vehicle profiling spring boot service
spring.application.title = Restful API

# enable spring boot actuator endpoints
management.endpoints.web.exposure.include = *

# spring boot profiles
spring.profiles.active = test
spring.output.ansi.enabled = ALWAYS

# ----------------------------------------
# APPLICATION SERVER PROPERTIES
# ----------------------------------------
server.port = 8084
server.servlet.context-path = /
server.ssl.enabled = false
server.ssl.key-store = ../keystore.p12

# Whether response compression is enabled.
server.compression.enabled = false
server.servlet.encoding.force = true
server.servlet.encoding.charset = UTF-8
# List of userEntity-agents to exclude from compression.
#server.compression.excluded-userEntity-agents=

# Comma-separated list of MIME types that should be compressed.
server.compression.mime-types = text/html,text/xml,text/plain,text/css,text/javascript,application/javascript

# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size = 2048

# ----------------------------------------
# Database Migration
# ----------------------------------------
spring.flyway.enabled = true

###################
# JPA Configuration
###################
spring.sql.init.mode = always
spring.sql.init.data-locations = classpath:db/data.sql

#spring.jpa.defer-datasource-initialization = true
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans = false
spring.jpa.properties.hibernate.jdbc.batch_size = 20
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.ddl-auto = none

# logging
logging.level.root = WARN
logging.level.org.springframework.security = INFO
logging.level.com.jumkid.share = TRACE
logging.level.com.jumkid.vehicle = TRACE
logging.pattern.console = %d{yy-MM-dd E HH:mm:ss.SSS} [%p] [JID %X{Journey-ID}] --- %logger{0} \\t:\\t %m\\n

# ----------------------------------------
# vehicle profile properties
# ----------------------------------------
# enable spring security token filter
com.jumkid.jwt.token.enable = true
com.jumkid.jwt.token.validate = false
com.jumkid.jwt.token.introspect-url = http://localhost:8080/auth/realms/jumkid/protocol/openid-connect/userinfo
com.jumkid.jwt.token.client-id = vehicle-profile
com.jumkid.jwt.token.client-secret = @@secret@@
com.jumkid.jwt.token.fetch-url = http://localhost:8080/auth/realms/jumkid/protocol/openid-connect/token
com.jumkid.api.user-info = http://127.0.0.1:80/v1/user

# ----------------------------------------
# ELASTICSEARCH PROPERTIES
# ----------------------------------------
elasticsearch.host = localhost
elasticsearch.port = 9200
elasticsearch.cluster.name = eslocal
elasticsearch.http.protocol = http
elasticsearch.keystore.format = pkcs12
elasticsearch.keystore.path =
elasticsearch.keystore.pass =
elasticsearch.user.name =
elasticsearch.user.password =
elasticsearch.aggregation.fields.mapping = { }

# ----------------------------------------
# KAFKA PROPERTIES
# ----------------------------------------
spring.kafka.bootstrap-servers = localhost:10092
com.jumkid.events.topic.vehicle-create = vehicle.create
com.jumkid.events.topic.vehicle-delete = vehicle.delete
spring.kafka.consumer.group-id = 0

# ----------------------------------------
# internal api
# ----------------------------------------
internal.api.content-vault = http://content-vault:8082
internal.api.content-vault.clone = /gallery/%s/clone
internal.api.user = http://localhost/v1/user
