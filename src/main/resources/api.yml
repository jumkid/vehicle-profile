openapi: 3.1.0
info:
  version: v1
  title: vehicle-profile API
  description: vehicle-profile RESTFul api for openapi 3.1
  termsOfService: 'https://jumkid.com/terms-of-use'
  contact:
    name: support
    url: jumkid.com
    email: support@jumkid.com
  license:
    name: Jumkid Public License
    url: 'http://license.jumkid.com'
servers:
  - description: Testing
    url: 'http://localhost:8084'
  - description: Live production
    url: 'http://api.jumkid.com'
tags:
  - name: v1
    description: API for version 0.9.1
  - name: test
    description: API for test
paths:
  '/vehicles':
    get:
      tags:
        - v1
      operationId: getVehicles
      description: get all vehicles by user
      security:
        - Authorization: []
      responses:
        '200':
          $ref: '#/components/responses/200-vehicles'
        '403':
          $ref: '#/components/responses/403-access-deny'
    post:
      tags:
        - v1
      operationId: addVehicle
      description: add new activity for user
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '201':
          $ref: '#/components/responses/201-created'
        '403':
          $ref: '#/components/responses/403-access-deny'

  '/vehicles/search':
    get:
      tags:
        - v1
        - test
      operationId: searchUserVehicle
      description: search vehicle profiles with keyword
      security:
        - Authorization: []
      parameters:
        - name: keyword
          description: search keyword
          in: query
          required: true
          schema:
            type: string
        - name: size
          description: search result size
          in: query
          required: true
          schema:
            type: integer
        - name: page
          description: page number of search result
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/200-vehicles'

  '/vehicles/search-public':
    get:
      tags:
        - v1
        - test
      operationId: searchPublicVehicle
      description: search public vehicle profiles with keyword
      security:
        - Authorization: []
      parameters:
        - name: keyword
          description: search keyword
          in: query
          required: true
          schema:
            type: string
        - name: size
          description: search result size
          in: query
          required: true
          schema:
            type: integer
        - name: page
          description: page number of search result
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/200-vehicles'        
 
  '/vehicle/search-matchers':
    post:
      tags:
        - v1
        - test
      operationId: searchByMatchers
      description: search by match fields
      security:
        - Authorization: []
      parameters:
        - name: size
          description: search result size
          in: query
          required: true
          schema:
            type: integer
        - name: page
          description: page number of search result
          in: query
          required: true
          schema:
            type: integer
      requestBody:      
        description: match fields name and value list
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VehicleFieldValuePair'
      responses:
        '200':
          $ref: '#/components/responses/200-vehicles'

  '/vehicle/search-aggregation':
    post:
      tags:
        - v1
        - test
      operationId: searchForAggregation
      description: aggregation search for certain field 
      security:
        - Authorization: []
      parameters:
        - name: field
          description: field name
          in: query
          required: true
          schema:
            type: string
        - name: size
          description: size of bucket results
          in: query
          required: true
          schema:
            type: number    
      requestBody:      
        description: match fields name and value list
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VehicleFieldValuePair'
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  schema:
                    type: string

  '/vehicles/{id}':
    get:
      tags:
        - v1
      operationId: getVehicle
      description: get single vehicle profile with corresponding id
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200-vehicle'
        '403':
          $ref: '#/components/responses/403-access-deny'
        '404':
          description: NOT_FOUND
    put:
      tags:
        - v1
      operationId: updateVehicle
      description: update existing user vehicle
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/vehicle'
      responses:
        '200':
          $ref: '#/components/responses/200-vehicle'
        '403':
          $ref: '#/components/responses/403-access-deny'
        '409':
          description: CONFLICT
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/jumkid/share-jar/master/src/main/resources/share.yaml#/components/schemas/CustomErrorResponse'
    delete:
      tags:
        - v1
      operationId: deleteVehicle
      description: delete an existing vehicle for user
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: NOT_FOUND
        '403':
          $ref: '#/components/responses/403-access-deny'
          
  '/vehicles/import':
    post:
      tags:
        - v1
      operationId: import
      description: import vehicle data
      security:
        - Authorization: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                tags:
                  type: array
                  format: string
      responses:
        '200':
          description: import vehicle data in csv format
          content:
            application/json:
              schema:
                type: integer

  '/vehicles/reindex':
    get:
      tags:
        - v1
      operationId: reindex
      description: reindex vehicle data
      security:
        - Authorization: [ ]
      responses:
        '200':
          description: reindex vehicle data
        '403': 
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/jumkid/share-jar/master/src/main/resources/share.yaml#/components/schemas/CustomErrorResponse'

components:
  schemas:
    Vehicle:
      description: Model of vehicle
      properties:
        vehicleId:
          type: string
        name:
          type: string
        make:
          type: string
        model:
          type: string
        modelYear:
          type: integer
        trimLevel:
          type: string
        mediaGalleryId:
          type: string
        accessScope:
          $ref: '#/components/schemas/AccessScope'
        vehicleEngine:
          $ref: '#/components/schemas/VehicleEngine'
        vehicleTransmission:
          $ref: '#/components/schemas/VehicleTransmission'
        createdBy:
          type: string
        creationDate:
          $ref: 'https://raw.githubusercontent.com/jumkid/share-jar/master/src/main/resources/share.yaml#/components/schemas/LocalDateTime'
        modifiedBy:
          type: string
        modificationDate:
          $ref: 'https://raw.githubusercontent.com/jumkid/share-jar/master/src/main/resources/share.yaml#/components/schemas/LocalDateTime'
    VehicleEngine:
      description: Model of vehicle engine
      properties:
        vehicleEngineId:
          type: integer
        name:
          type: string
        type:
          type: string
        cylinder:
          type: integer
        fuelType:
          type: string
        horsepower:
          type: integer
        torque:
          type: integer
        manufacturerEngineCode:
          type: string
    VehicleTransmission:
      description: Model of vehicle transmission
      properties:
        vehicleTransmissionId:
          type: integer
        name:
          type: string
        type:
          type: string
        availability:
          type: string
        automaticType:
          type: string
        numberOfSpeeds:
          type: integer
    AccessScope:
      type: string
      enum:
        - public
        - private
    VehicleFieldValuePair:
      description: key value pair for vehicle field
      properties:
        field: 
          type: string
        value:
          type: string | number

  responses:
    200-vehicle:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vehicle'
    200-vehicles:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Vehicle'          
    403-access-deny:
      description: FORBIDDEN
      content:
        application/json:
          schema:
            $ref: 'https://raw.githubusercontent.com/jumkid/share-jar/master/src/main/resources/share.yaml#/components/schemas/CustomErrorResponse'
    201-created:
      description: CREATED
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
  parameters:
    id:
      name: id
      description: vehicle identifier
      in: path
      required: true
      schema:
        type: string
  requestBodies:
    vehicle:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vehicle'
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
security:
  - Authorization: []
