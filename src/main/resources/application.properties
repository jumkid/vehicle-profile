# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name = @project.artifactId@
spring.application.version = @project.version@
spring.application.description = vehicle profiling spring boot service
spring.application.title = Restful API

# enable spring boot actuator endpoints
management.endpoints.web.exposure.include = *

# spring boot profiles
spring.profiles.active = dev
spring.output.ansi.enabled = ALWAYS

# ----------------------------------------
# APPLICATION SERVER PROPERTIES
# ----------------------------------------
server.port = 8084
server.servlet.context-path = /
server.ssl.enabled = false
server.ssl.key-store = ../keystore.p12

# Whether response compression is enabled.
server.compression.enabled = false
server.servlet.encoding.force = true
server.servlet.encoding.charset = UTF-8
# List of userEntity-agents to exclude from compression.
#server.compression.excluded-userEntity-agents=

# Comma-separated list of MIME types that should be compressed.
server.compression.mime-types = text/html,text/xml,text/plain,text/css,text/javascript,application/javascript

# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size = 2048

# ----------------------------------------
# Database Migration
# ----------------------------------------
spring.flyway.enabled = true

# ----------------------------------------
# MySQL DataSource
# ----------------------------------------
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/vehicle
spring.datasource.username = <DB_USER_NAME>
spring.datasource.password = <DB_PASSWORD>

# spring JPA
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.default_schema = vehicle
spring.jpa.properties.hibernate.enable_lazy_load_no_trans = false
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.ddl-auto = none

# spring batch
spring.batch.jdbc.initialize-schema = ALWAYS

# logging
logging.level.root = WARN
logging.level.org.springframework.security = INFO
logging.level.com.jumkid.share = TRACE
logging.level.com.jumkid.vehicle = TRACE
logging.pattern.console = %clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr([JID: %X{Journey-ID}]){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n

# ----------------------------------------
# vehicle profile properties
# ----------------------------------------
# enable spring security token filter
jwt.token.enable = true
jwt.token.validate = false
jwt.token.client.id = vehicle-profile
jwt.token.client.secret = PNzhDN8qbFQuatG89Z5YRBeoUyfEE3GZ
jwt.token.fetch.url = http://keycloak:8080/auth/realms/jumkid/protocol/openid-connect/token
jwt.token.introspect.url = http://keycloak:8080/auth/realms/jumkid/protocol/openid-connect/userinfo
# keycloak admin REST api
user.profile.access.url = http://keycloak:8080/auth/admin/realms/jumkid/users

# ----------------------------------------
# ELASTICSEARCH PROPERTIES
# ----------------------------------------
elasticsearch.cluster.name = eslocal
elasticsearch.host = localhost
elasticsearch.port = 9200
elasticsearch.user.name = elastic
elasticsearch.user.password = bigdata
elasticsearch.http.protocol = https
elasticsearch.keystore.format = pkcs12
elasticsearch.keystore.path = certs/ca.crt
elasticsearch.keystore.pass =

# ----------------------------------------
# KAFKA PROPERTIES
# ----------------------------------------
spring.kafka.bootstrap-servers = localhost:9092
spring.kafka.topic.name.vehicle.create = vehicle.create
spring.kafka.topic.name.vehicle.delete = vehicle.delete
spring.kafka.consumer.group-id = 0

# ----------------------------------------
# internal api
# ----------------------------------------
internal.api.content-vault = http://localhost:8082
internal.api.content-vault.clone = /gallery/%s/clone
internal.api.user = http://localhost/v1/user